//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mingle.Domain.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Mingle.Domain.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannnot set party itself as contact!.
        /// </summary>
        internal static string CannnotSetPartyItselfAsContact {
            get {
                return ResourceManager.GetString("CannnotSetPartyItselfAsContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t delete Company Group Party!.
        /// </summary>
        internal static string CannotDeleteCompanyGroupParty {
            get {
                return ResourceManager.GetString("CannotDeleteCompanyGroupParty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Contact name cannot be empty.
        /// </summary>
        internal static string ContactNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ContactNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country code cannot be empty.
        /// </summary>
        internal static string CountryCodeCannotBeEmpty {
            get {
                return ResourceManager.GetString("CountryCodeCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Country name cannot be empty.
        /// </summary>
        internal static string CountryNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("CountryNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom property name cannot be empty.
        /// </summary>
        internal static string CustomPropertyNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("CustomPropertyNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Date title cannot be empty.
        /// </summary>
        internal static string DateTitleCannotBeEmpty {
            get {
                return ResourceManager.GetString("DateTitleCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Department cannot be empty.
        /// </summary>
        internal static string DepartmentCannotBeEmpty {
            get {
                return ResourceManager.GetString("DepartmentCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Department name cannot be empty.
        /// </summary>
        internal static string DepartmentNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("DepartmentNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Designation name cannot be empty.
        /// </summary>
        internal static string DesignationNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("DesignationNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email address cannot be empty.
        /// </summary>
        internal static string EmailIdCannotBeEmpty {
            get {
                return ResourceManager.GetString("EmailIdCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instant messenger ID cannot be empty.
        /// </summary>
        internal static string InstantMessengerIdCannotBeEmpty {
            get {
                return ResourceManager.GetString("InstantMessengerIdCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid email address format. The format of the email address is not correct.
        /// </summary>
        internal static string InvalidEmailAddress {
            get {
                return ResourceManager.GetString("InvalidEmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Web URL format. The format of the Website URL is not correct.
        /// </summary>
        internal static string InvalidUrl {
            get {
                return ResourceManager.GetString("InvalidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language cannot be empty.
        /// </summary>
        internal static string LanguageCannotBeEmpty {
            get {
                return ResourceManager.GetString("LanguageCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nature of contact name cannot be empty.
        /// </summary>
        internal static string NatureOfContactNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("NatureOfContactNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Party name cannot be empty.
        /// </summary>
        internal static string PartyNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("PartyNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Person name cannot be empty.
        /// </summary>
        internal static string PersonNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("PersonNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone title cannot be empty.
        /// </summary>
        internal static string PhoneLabelCannotBeEmpty {
            get {
                return ResourceManager.GetString("PhoneLabelCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone number cannot be empty.
        /// </summary>
        internal static string PhoneNrCannotBeEmpty {
            get {
                return ResourceManager.GetString("PhoneNrCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Phone number exceeded max length: {0}.
        /// </summary>
        internal static string PhoneNrExceededMaxLength {
            get {
                return ResourceManager.GetString("PhoneNrExceededMaxLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profession name cannot be empty.
        /// </summary>
        internal static string ProfessionNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ProfessionNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State code cannot be empty.
        /// </summary>
        internal static string StateCodeCannotBeEmpty {
            get {
                return ResourceManager.GetString("StateCodeCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to State name cannot be empty.
        /// </summary>
        internal static string StateNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("StateNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website URL cannot be empty.
        /// </summary>
        internal static string WebsiteUrlCannotBeEmpty {
            get {
                return ResourceManager.GetString("WebsiteUrlCannotBeEmpty", resourceCulture);
            }
        }
    }
}
