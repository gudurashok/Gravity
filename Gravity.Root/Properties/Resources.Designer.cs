//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gravity.Root.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Gravity.Root.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application config item name cannot be empty.
        /// </summary>
        internal static string AppConfigItemNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("AppConfigItemNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot log the exception.
        /// </summary>
        internal static string CannotLogException {
            get {
                return ResourceManager.GetString("CannotLogException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The company group database {0} specified in application config file does not exist.
        ///
        ///Do you want to create a new company group? 
        ///
        ///Note: You can either create a new from the scratch or you can attach an existing one..
        /// </summary>
        internal static string CoGroupDatabaseDoesNotExistCreateNew {
            get {
                return ResourceManager.GetString("CoGroupDatabaseDoesNotExistCreateNew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Company group name cannot be empty.
        /// </summary>
        internal static string CoGroupNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("CoGroupNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Company group saved successfully.
        /// </summary>
        internal static string CoGroupSavedSuccessfully {
            get {
                return ResourceManager.GetString("CoGroupSavedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure to delete this company group?
        ///
        ///WARNING: Deleting company group will delete data..
        /// </summary>
        internal static string DeleteCompanyGroup {
            get {
                return ResourceManager.GetString("DeleteCompanyGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Document with ID: {0} not found..
        /// </summary>
        internal static string DocumentOfIdNotFound {
            get {
                return ResourceManager.GetString("DocumentOfIdNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incorrect login name or password.
        /// </summary>
        internal static string IncorrectLogin {
            get {
                return ResourceManager.GetString("IncorrectLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid login name.
        /// </summary>
        internal static string InvalidLoginName {
            get {
                return ResourceManager.GetString("InvalidLoginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login is disabled.
        /// </summary>
        internal static string LoginDisabled {
            get {
                return ResourceManager.GetString("LoginDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login name &apos;{0}&apos; already exists.
        /// </summary>
        internal static string LoginNameAlreadyExists {
            get {
                return ResourceManager.GetString("LoginNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login name cannot be empty..
        /// </summary>
        internal static string LoginNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("LoginNameCannotBeEmpty", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon notifyIcon {
            get {
                object obj = ResourceManager.GetObject("notifyIcon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password and confirm password is not matching.
        /// </summary>
        internal static string PasswordAndConfirmPasswordIsNotMatching {
            get {
                return ResourceManager.GetString("PasswordAndConfirmPasswordIsNotMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Passwords not matching.
        /// </summary>
        internal static string PasswordsNotMatching {
            get {
                return ResourceManager.GetString("PasswordsNotMatching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResponsibilityNameCannotBeEmpty.
        /// </summary>
        internal static string ResponsibilityNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ResponsibilityNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select company group database.
        /// </summary>
        internal static string SelectCompanyGroupDatabase {
            get {
                return ResourceManager.GetString("SelectCompanyGroupDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name cannot be administrator.
        /// </summary>
        internal static string UserNameCannotBeAdministrator {
            get {
                return ResourceManager.GetString("UserNameCannotBeAdministrator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User name cannot be empty.
        /// </summary>
        internal static string UserNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("UserNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User responsibility in use.
        /// </summary>
        internal static string UserResponsibilityInUse {
            get {
                return ResourceManager.GetString("UserResponsibilityInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User role in use.
        /// </summary>
        internal static string UserRoleInUse {
            get {
                return ResourceManager.GetString("UserRoleInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User role name cannot be empty.
        /// </summary>
        internal static string UserRoleNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("UserRoleNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User saved successfully.
        /// </summary>
        internal static string UserSavedSuccessfully {
            get {
                return ResourceManager.GetString("UserSavedSuccessfully", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Want to exit {0}.
        /// </summary>
        internal static string WantToExistApp {
            get {
                return ResourceManager.GetString("WantToExistApp", resourceCulture);
            }
        }
    }
}
